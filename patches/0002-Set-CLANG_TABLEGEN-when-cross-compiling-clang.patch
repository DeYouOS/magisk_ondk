From f7b66b2ade7e8e3b1e8e7ab8afdd0f9fdb86dadb Mon Sep 17 00:00:00 2001
From: topjohnwu <topjohnwu@google.com>
Date: Sat, 25 Jun 2022 03:59:31 -0700
Subject: [PATCH 2/5] Set CLANG_TABLEGEN when cross compiling clang

When cross compiling rustc with `llvm.clang = true`, CLANG_TABLEGEN
has to be set to the host clang-tblgen executable to build clang.
---
 src/bootstrap/native.rs | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/bootstrap/native.rs b/src/bootstrap/native.rs
index 983ba2d30d2..247e0476f06 100644
--- a/src/bootstrap/native.rs
+++ b/src/bootstrap/native.rs
@@ -430,11 +430,20 @@ fn run(self, builder: &Builder<'_>) -> PathBuf {
             //        actually exists most of the time in normal installs of LLVM.
             let host_bin = builder.llvm_out(builder.config.build).join("bin");
             cfg.define("LLVM_TABLEGEN", host_bin.join("llvm-tblgen").with_extension(EXE_EXTENSION));
+            // LLVM_NM is required for cross compiling using MSVC
             cfg.define("LLVM_NM", host_bin.join("llvm-nm").with_extension(EXE_EXTENSION));
             cfg.define(
                 "LLVM_CONFIG_PATH",
                 host_bin.join("llvm-config").with_extension(EXE_EXTENSION),
             );
+            if builder.config.llvm_clang {
+                let build_bin = builder.llvm_out(builder.config.build).join("build").join("bin");
+                let clang_tblgen = build_bin.join("clang-tblgen").with_extension(EXE_EXTENSION);
+                if !clang_tblgen.exists() {
+                    panic!("unable to find {}", clang_tblgen.display());
+                }
+                cfg.define("CLANG_TABLEGEN", clang_tblgen);
+            }
         }
 
         if let Some(ref suffix) = builder.config.llvm_version_suffix {
-- 
2.36.1

